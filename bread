#!/bin/bash

# bread is a complimentary utility for b (boredbutton). 
# please put b in your bin if you haven't already.

# Color variables
white='\033[1;37m'
error='\033[0;31m'
warn='\033[1;33m'
echo -e "$white"
# Activity list location:
homedir=~/
filename="$homedir.bcount/actlist.txt"

# Some checks were moved to functions.
function fdel {
    rm -rf ~/.bcount/count.txt
    echo "Done."
    exit
}

function fdecr {
    let ccount--
    echo "$ccount" > ~/.bcount/count.txt
    exit
}

function fset {
    echo "###"
    echo "Input value: (Must be a valid number!)"
    read -re newval
    # prevent the user from inputing an invalid value.
    re='^[0-9]+$'
    if ! [[ $newval =~ $re ]]
    then
        echo -e "${error}[ERROR]${white} Not a number! Please restart bread and input a valid number."
        exit
    fi
    echo "$newval" > ~/.bcount/count.txt
    echo "Done!"
    exit
}
function factdel {
    rm -rf ~/.bcount/actlist.txt
    echo "Done."
    exit
}
function factnew {
    echo "###"
    echo "Checking for existing activities..."
varname="name"
vardesc="desc"
currentid="0"
while read -re line
do
    if [[ $line == ID* ]]
    then
        currentid=$line
    else
        if [[ $line == name=* ]]
        then
            line="${line:5}"
            makeline=$currentid$varname
            declare "$makeline=$makeline$line"
        else
        if [[ $line == desc=* ]]
        then
            line="${line:5}"
            makeline=$currentid$vardesc
            declare "$makeline=$makeline$line"
        else
            echo -e "Invalid line! Ignoring. Line content:\n$line"
        fi
        fi
    fi
    done < "$filename"
    idcount="${currentid:2}"
    echo "Done. $idcount"
    clear
    echo "Activity Creation Wizard >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    echo "Welcome to the Activity Creation Wizard."
    echo "Please type in the activity you want to add, for example, 'Write a script'. This is going to appear after 'How about you...', so make sure it fits."
    read -re newactname
    clear
    echo "Activity Creation Wizard >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    echo "Done!"
    echo "Now, please type in the activity description, for example, 'Make a cool script that makes your life easier'."
    read -re newactdesc
    clear
    echo "Activity Creation Wizard >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    echo "A new activity will be added with the following info:"
    echo "Name: $newactname"
    echo "Description: $newactdesc"
    echo "If this is correct, press Enter. If it's not, press Ctrl+C."
    read -ren1
    let idcount++
    echo "ID$idcount" >> ~/.bcount/actlist.txt
    echo "name=$newactname" >> ~/.bcount/actlist.txt
    echo "desc=$newactdesc" >> ~/.bcount/actlist.txt
    clear
    echo "Activity Creation Wizard >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    echo "Done! Your new activity has been added."
    echo "Press any button to exit."
    read -ren1
    exit
}

function fsymlink {
    echo "###"
    echo "Type in the symlink name. Please do not type in full paths, just a command that you'll use to invoke boredbutton."
    read -re symname
    ln -s ~/bin/b ~/bin/$symname
    echo "Created symlink $symname."
    echo "Press any button to exit."
    read -ren1
    exit
}
function fremsymlink {
    echo "###"
    echo -e "${warn}WARNING: THIS WILL REMOVE ANY FILE IN THE USER BIN DIRECTORY, EVEN IF IT'S NOT A SYMLINK. USE THIS WISELY."
    echo -e "${white}Type in the name of the symlink you want to remove:"
    read -re delsymname
    echo -e "Are you ${warn}SURE${white} that you want to remove $delsymname? If yes, type in 'y' (without quotations). If not, type in anything else."
    read -ren1 dslchoice
    if [[ $dslchoice != "y" && $dslchoice != "Y" ]]
    then
        echo "No changes have been made."
        exit
    fi
    rm -rf ~/bin/$delsymname
    echo "Done."
    exit
}
# Menu option check. Moved here because of argument checks.

function optioncheck {
# if we leave an empty string in read, the if statement will error out.
# instead of forcing it to output errors to /dev/nul, we use a more elegant solution:
if [ -z "$option" ]
then
    exit
fi

# parse option.
if [ "$option" = "del" ]
then
    fdel
fi
if [ "$option" = "decr" ]
then
    fdecr
fi
if [ "$option" = "set" ]
then
    fset
fi
if [ "$option" = "actdel" ]
then
    factdel
fi
if [ "$option" = "actcreator" ] || [ "$option" = "actc" ]
then
    factnew
fi
if [ "$option" = "printact" ]
then
    cat ~/.bcount/actlist.txt
fi
if [ "$option" = "symlink" ]
then
    fsymlink
fi
if [ "$option" = "remsymlink" ]
then
    fremsymlink
fi
}

# Argument parsing

# Argument checks are done by a function. You'll see why in a second.

function acheck {
    optioncheck
    mainmenu
}

# Bash dislikes string comparisons with empty strings.
# We have to check if the $1 variable is empty before the arg checks, or it will throw up a bunch of errors.

if [ ! -z "$1" ]
then
    option="$1"
    acheck
fi

# CHECKS

# check if count.txt exists.
if [ ! -f ~/.bcount/count.txt ]; then
    echo -e "${error}[ERROR]${white} Counter data not found! Are you sure you have boredbutton?"
    exit
fi

# check if count.txt if readable.
if [ ! -r ~/.bcount/count.txt ]
then
    echo -e "${error}[ERROR]${white} Counter data is not readable. Attempting to fix..."
    chmod 777 ~/.bcount/count.txt
    if [ ! -r ~/.bcount/count.txt ]
    then
        sudo chmod 777 ~/.bcount/count.txt
        if [ ! -r ~/.bcount/count.txt ]
        then
            echo -e "${error}[CRITICAL]${white}Could not make counter data readable."
            exit
        fi
    fi
fi

# check if count.txt is writeable.
if [ ! -w ~/.bcount/count.txt ]
then
    echo -e "${error}[ERROR]${white} Counter data not is not writeable. Attempting to fix..."
    chmod 777 ~/.bcount/count.txt
    if [ ! -w ~/.bcount/count.txt ]
    then
        sudo chmod 777 ~/.bcount/count.txt
        if [ ! -w ~/.bcount/count.txt ]
        then
            echo -e "${error}[CRITICAL]${white} Could not make counter data writeable."
            exit
        fi
    fi
fi

# check if actlist.txt exists.
if [ ! -f ~/.bcount/actlist.txt ]; then
    echo -e "${error}[ERROR]${white} Activity list not found! Make sure you ran boredbutton (b) at least once."
    exit
fi

# check if actlist.txt if readable.
if [ ! -r ~/.bcount/actlist.txt ]
then
    echo -e "${error}[ERROR]${white} Activity list data is not readable. Attempting to fix..."
    chmod 777 ~/.bcount/actlist.txt
    if [ ! -r ~/.bcount/actlist.txt ]
    then
        sudo chmod 777 ~/.bcount/actlist.txt
        if [ ! -r ~/.bcount/actlist.txt ]
        then
            echo -e "${error}[CRITICAL]${white} Could not make activity list data readable."
            exit
        fi
    fi
fi

# check if actlist.txt is writeable.
if [ ! -w ~/.bcount/actlist.txt ]
then
    echo -e "${error}[ERROR]${white} The activity list is not writeable. Attempting to fix..."
    chmod 777 ~/.bcount/actlist.txt
    if [ ! -w ~/.bcount/actlist.txt ]
    then
        sudo chmod 777 ~/.bcount/actlist.txt
        if [ ! -w ~/.bcount/actlist.txt ]
        then
            echo -e "${error}[CRITICAL]${white} Could not make actlist.txt writeable."
            exit
        fi
    fi
fi

# load current count
ccount=$(<~/.bcount/count.txt)

# check if the counter isn't empty.
if [ -z $ccount ]
then
    echo -e "${error}[ERROR]${white} Counter data empty! Are you sure you ran boredbutton (b)?"
    exit
fi

# print current count.
function mainmenu {
clear
echo -e "You used the 'I'm bored' button ${warn}$ccount${white} times."
echo -e "${warn}### Counter options ###${white}"
echo -e "If you want to remove counter data, type '${warn}del${white}' (without quotations). "
echo -e "If you want to decrease the counter by 1, type '${warn}decr${white}' (without quotations)."
echo -e "If you want to set the counter to a certain value, type '${warn}set${white}' (without quotations)."
echo -e "${warn}### Activity options ###${white}"
echo -e "If you want to clear all activity data, type '${warn}actdel${white}' (without quotations)."
echo -e "If you want to create a new activity, use the Activity Creation Wizard by typing '${warn}actcreator${white}' or '${warn}actc${white}' (without quotations)."
echo -e "If you want to print out all activities, type in '${warn}printact${white}' (without quotations)."
echo -e "${warn}### Miscellaneous ###${white}"
echo -e "To create an alternative link (symlink) to boredbutton, type '${warn}symlink${white}' (without quotations)."
echo -e "To remove a symlink, type '${warn}remsymlink${white}' (without quotations)."
echo -e "To exit, type anything else or just press Enter."
read -re option
optioncheck
}

# Init main menu.
mainmenu
# If no option is chosen, the script goes here.
nooption=1
# This if puts the user in the main menu if the $1 argument was invalid.
if [ -z $1 ]
then
    exit
else
    mainmenu
fi
exit

#!/bin/bash

# bread release 0.7

# bread is a complimentary utility for b (boredbutton). 
# please put b in your bin if you haven't already.

# Color variables
white='\033[1;37m'
error='\033[0;31m'
warn='\033[1;33m'
menuname='\033[1;32m'

echo -e "$white"

## Load some things

# Activity list location:
homedir=~/
filename="$homedir.bcount/actlist.txt"

# Load current count
ccount=$(<~/.bcount/count.txt)

# Load options
options=("del" "decr" "set" "actdel" "actnew" "printact" "symlink" "remsymlink")

## Checks
# Check if count.txt exists.
if [ ! -f "$homedir.bcount/count.txt" ]; then
    echo "0" > ~/.bcount/count.txt
    ccount=$(<~/.bcount/count.txt)
else
    # load current count
    ccount=$(<~/.bcount/count.txt)
fi

# Counter data read test

function readtest {
if [ ! -r "$homedir.bcount/count.txt" ] || [ ! -w "$homedir.bcount/count.txt" ]
then
    echo -e "${white}Fixing counter data..."
    chmod 777 ~/.bcount/count.txt
    if [ ! -r "$homedir.bcount/count.txt" ] || [ ! -w "$homedir.bcount/count.txt" ]
    then
        sudo chmod 777 ~/.bcount/count.txt
        if [ ! -r "$homedir.bcount/count.txt" ] || [ ! -w "$homedir.bcount/count.txt" ]
        then
            echo -e "${error}[CRITICAL ERROR]${white} Could not fix counter data."
            exit
        fi
    fi
fi
}

# Activity list read test

function actreadtest {
# check if actlist.txt exists.
if [ ! -f "$homedir.bcount/actlist.txt" ]; then
    echo -e "${error}[ERROR]${white} Activity list not found! Make sure you ran boredbutton (b) at least once."
    exit
fi
if [ ! -r "$homedir.bcount/actlist.txt" ] || [ ! -w "$homedir.bcount/actlist.txt" ]
then
    echo -e "${white}Fixing activity data..."
    chmod 777 ~/.bcount/actlist.txt
    if [ ! -r "$homedir.bcount/actlist.txt" ] || [ ! -w "$homedir.bcount/actlist.txt" ]
    then
        sudo chmod 777 ~/.bcount/actlist.txt
        if [ ! -r "$homedir.bcount/actlist.txt" ] || [ ! -w "$homedir.bcount/actlist.txt" ]
        then
            echo -e "${error}[CRITICAL ERROR]${white} Could not fix activity data."
            exit
        fi
    fi
fi
}

# Perform tests.
readtest
actreadtest

## Functions

function fdel {
    clear
    echo -e "${warn}### Delete counter data###${white}"
    rm -rf ~/.bcount/count.txt
    echo "0" > ~/.bcount/count.txt
    echo -e "Done!"
    exit
}

function fdecr {
    clear
    echo -e "${warn}### Decrease counter value ###${white}"
    let ccount--
    echo "$ccount" > ~/.bcount/count.txt
    echo -e "The current count is now ${warn}$ccount${white}."
    exit
}

function fset {
    clear
    echo -e "${warn}### Set counter value ###${white}"
    echo "Input value: (Must be a valid number!)"
    read -re newval
    # prevent the user from inputing an invalid value.
    re='^[0-9]+$'
    if ! [[ $newval =~ $re ]]
    then
        echo -e "${error}[ERROR]${white} Not a number! Please restart bread and input a valid number."
        exit
    fi
    echo "$newval" > ~/.bcount/count.txt
    echo -e "Changed the count to ${warn}$newval${white}!"
    exit
}
function factdel {
    clear
    echo -e "${warn}### Delete the activity list ###${white}"
    rm -rf ~/.bcount/actlist.txt
    echo -e "Done! Please restore the activity list by running ${warn}b${white}."
    exit
}
function factnew {
    clear
    echo -e "${warn}### New activity ###${white}"
    echo "Checking for existing activities..."
    varname="name"
    vardesc="desc"
    currentid="0"
    while read -re line
    do
    if [[ $line == ID* ]]
    then
        currentid=$line
    else
        if [[ $line == name=* ]]
        then
            line="${line:5}"
            makeline=$currentid$varname
            declare "$makeline=$makeline$line"
        else
        if [[ $line == desc=* ]]
        then
            line="${line:5}"
            makeline=$currentid$vardesc
            declare "$makeline=$makeline$line"
        else
            echo -e "Invalid line! Ignoring. Line content:\n$line"
        fi
        fi
    fi
    done < "$filename"
    idcount="${currentid:2}"
    echo "Done!"
    clear
    echo -e "${warn}### Create a new activity ###${white}"
    echo "Welcome to the Activity Creation Wizard."
    echo "Please type in the activity you want to add, for example, 'Write a script'. This is going to appear after 'How about you...', so make sure it fits."
    read -re newactname
    clear
    echo -e "${warn}### Create a new activity ###${white}"
    echo -e "${warn}Done!${white}"
    echo "Now, please type in the activity description, for example, 'Make a cool script that makes your life easier'."
    read -re newactdesc
    clear
    echo -e "${warn}### Create a new activity ###${white}"
    echo -e "${warn}A new activity will be added with the following info:${white}"
    echo -e "Name: ${warn}$newactname${white}"
    echo -e "Description: ${warn}$newactdesc${white}"
    echo -e "If this is correct, press ${warn}Enter${white}. If it's not, press ${warn}Ctrl+C${white}."
    read -ren1
    let idcount++
    echo "ID$idcount" >> ~/.bcount/actlist.txt
    echo "name=$newactname" >> ~/.bcount/actlist.txt
    echo "desc=$newactdesc" >> ~/.bcount/actlist.txt
    clear
    echo -e "${warn}### Create a new activity ###${white}"
    echo "Done! Your new activity has been added."
    exit
}

## Argument parsing
# Argument parsing used to be done with a function and an if statement. Here's a more elegant approach:
if ! [ -z $1 ]
then
	lookfor=f$1
	if [ "$(type -t $lookfor)" = "function" ]
	then
		$lookfor
	fi
fi
	

## Main menu

while true
do
	clear
	echo -e "You used the 'I'm bored' button ${warn}$ccount${white} times."
	echo -e "\n${menuname}### Counter options ###${white}\n"
	echo -e "${menuname}Remove counter data${white} - ${warn}del${white}."
	echo -e "${menuname}Decrease counter by 1${white} - ${warn}decr${white}."
	echo -e "${menuname}Set counter value${white} - ${warn}set${white}."
	echo -e "\n${menuname}### Activity options ###${white}\n"
	echo -e "${menuname}Remove activity data${white} - ${warn}actdel${white}."
	echo -e "${menuname}Create a new activity${white} - ${warn}actnew${white}."
	echo -e "${menuname}Print all activities${white} - ${warn}printact${white}."
    echo -e "\n${menuname}Note: ${white}To recreate activity data, run ${warn}b${white}."
    echo -e "\n${menuname}### Exit ###${white}\n"
	echo -e "To exit, type anything else or just press Enter."
	echo -e "\n${menuname}######################${white}"

	read -re choice
	lookfor=f$choice
	if ! [ -z $choice ]
	then
    	if [ "$(type -t $lookfor)" = "function" ]
    	then
        	$lookfor
		else
			exit
    	fi
	else
		exit
	fi
done
